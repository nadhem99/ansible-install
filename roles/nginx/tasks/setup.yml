---

- name: Upload nginx package
  copy: >
    src="{{ nginx_package }}.tar.gz"
    dest="/tmp"
#  when: curl.status_code != 0
  tags:
   - nginx

- name: cleanup old installation
  file: >
    state="absent"
    path="{{ nginx_install_prefix }}"

- name: Create directory
  command: mkdir -p {{ nginx_install_prefix }}

- name: Uncompress nginx
  unarchive: >
    src="/tmp/{{ nginx_package }}.tar.gz"
    dest="{{ nginx_install_prefix }}"
    copy="no"
  tags:
   - nginx

- name: Rename nginx install
  command: "mv {{ nginx_install_prefix }}/{{ nginx_package }} {{ nginx_install_prefix }}/install"

- name: Configure nginx build
  shell: "cd {{ nginx_install_prefix }}/install ; ./configure --http-log-path={{ nginx_access_log_path }} --error-log-path={{ nginx_error_log_path }} --conf-path={{ nginx_conf_path }} --pid-path={{ nginx_pidfile }} --sbin-path={{ nginx_sbin_path }}/nginx"

- name: Install nginx
  shell: "cd {{ nginx_install_prefix }}/install make ; make install"

- name: Add nginx binaries in default path
  lineinfile: >
    dest="~/.bashrc"
    line="export PATH={{ item }}:$PATH"
    regexp='^(export) ?PATH\={{ item }}'
    state=present
    owner={{ nginx_user }}
  with_items:
   - "{{ nginx_sbin_path }}"
  tags:
   - node
